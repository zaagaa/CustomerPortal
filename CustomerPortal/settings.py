"""
Django settings for CustomerPortal project.
Generated by 'django-admin startproject' using Django 5.2.2.
"""

import os
import json
from pathlib import Path
from dotenv import load_dotenv
import dj_database_url

# === Base Directory ===
BASE_DIR = Path(__file__).resolve().parent.parent

# === Load .env for DATABASE_URL (online mode) ===
load_dotenv()
DB_CONFIG_PATH = os.path.join(BASE_DIR, 'db_config.json')

# === Online / Offline / SQLite fallback DB detection ===
if os.getenv('DATABASE_URL'):
    INSTANCE_TYPE = "online"
    DATABASES = {
        'default': dj_database_url.config(conn_max_age=600, ssl_require=True)
    }

elif os.path.exists(DB_CONFIG_PATH):
    INSTANCE_TYPE = "offline"
    with open(DB_CONFIG_PATH) as f:
        DATABASES = {
            'default': json.load(f)
        }
    if "ENGINE" not in DATABASES["default"]:
        DATABASES["default"]["ENGINE"] = "django.db.backends.postgresql"

else:
    INSTANCE_TYPE = "offline"
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': str(BASE_DIR / 'db.sqlite3'),
        }
    }

print(f"ðŸ“¡ Using {INSTANCE_TYPE.upper()} database mode.")


# === Quick-start development settings ===
SECRET_KEY = 'django-insecure-n31&)l*b0w!(_xqm=zb372v9w61)!76i=*w5_o0dpn*1r&fz+j'
DEBUG = True
ALLOWED_HOSTS = ['*']


# === Application definition ===
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'CustomerPortal',
    'dashboard',
'staff'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'CustomerPortal.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],  # Add custom template paths here if needed
        'DIRS': [BASE_DIR / 'staff' / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'CustomerPortal.wsgi.application'


# === Password validation ===
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# === Internationalization ===
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True


# === Static files (CSS, JS, Images) ===
STATIC_URL = 'static/'

# === Default primary key field type ===
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
